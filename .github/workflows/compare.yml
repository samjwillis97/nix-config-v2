name: "Compare"
on:
  pull_request:
jobs:
  comparisons:
    runs-on: ubuntu-latest
    steps:

    # - uses: cachix/install-nix-action@v31
    #   with:
    #     nix_path: nixpkgs=channel:nixos-unstable

    - uses: DeterminateSystems/nix-installer-action@main
    - uses: DeterminateSystems/magic-nix-cache-action@main

    - uses: actions/checkout@v5

    - name: Build mini-media-server for PR
      run: |
        nix build .#nixosConfigurations.mini-media-server.config.system.build.toplevel
        mv result ../branch-result

    - uses: actions/checkout@v5
      with:
        ref: "main"
    - name: Build mini-media-server main
      run: |
        nix build .#nixosConfigurations.mini-media-server.config.system.build.toplevel
        mv result ../main-result

    - name: Compare builds
      id: compare
      run: |
        nix-env -i nvd -f '<nixpkgs>'
        nvd diff ../main-result ../branch-result | tee nvd.diff

        # Expose multiline output for later steps
        {
          echo 'diff<<EOF'
          cat nvd.diff
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"

    - name: Update Pull Request
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const MARKER = '<!-- nvd-diff-comment -->';
          const title = 'Nix build diffs';
          const diff = `${process.env.DIFF || `${{ steps.compare.outputs.diff }}`}`.trim();
          const body = `
          ${MARKER}
          ## ${title}
          
          #### \`nvd diff\` on mini-media-server
          <details><summary>Diff report</summary>

          \`\`\`text
          ${diff}
          \`\`\`

          </details>`;

          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            per_page: 100
          });

          const existing = comments.find(c =>
            c.body?.includes(MARKER) &&
            (c.user?.type === 'Bot' || c.user?.login === context.actor)
          );

          if (existing) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existing.id,
              body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
          }
